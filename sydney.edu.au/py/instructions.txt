CSV to XML Translation 

     Auth:Keir Vaughan Taylor

ERA machine is source of infornation having an ODBC connection to IRMA
In the morning SQL programs arre run extracting data from IRMA and outputting
CSV files

On the server chara.library.usyd.edu.au
CSV files are created by the shell script
runRdSwitchQueries.sh
which runs on a regular basis employing a set of SQL queries.
The queries are located in /home/dspace/rdswitchQueries and are run by 
a cron job.

Each query is named using the convention qry_<identifying keyword>.sh
The shell scripts run SQL programs drawing in information from the
IRMA and writing out CSV files named using the convention
<identifying keyword>.csv

The resulting CSV is then automatically pushed to the server 
rdswitchboard.library.usyd.edu.au:/home/dspace/  using ssh keys
as a secure method of transfer.

On rdswitchboard a Python program  writes XML from the CSV file

The identifying keyword is used to link the input CSV and the defined
XML syntax and the output XML. For example

     An identifying keyword might be "Grants". CSV information relating to
     grants is in the CSV file Grants.csv. The XML schema is to be located in
     the file GrantsXMLSchemaInclude.py

     The csv to xml conversion program is rdswitchcsv2xml.py and is run with
     an argument rdswitchcsv2xml.py <identifying keyword> 
     in this example

     rdswitchcsv2xml.py Grants

     The above program expects a schema file called
     GrantsXMLSchemaInclude.py and an input csv file called Grants.csv.
     The result is passed through a program to remove unwanted characters and place in a "cleaned" xml file.
The program will output an xml file called GrantsCleaned.xml

Batch program csv2xmlByKeyword.sh sets the names of input, output data 
directories and the directory of source executables.
Each csv files in the csv input directory is converted to XML suitable
for export to Neo4j database. The converted XMl is placed in an XML destination
directory and then run though a program to clean up any unicode chararacters


Batch program csvSplits2xmlByKeyword.sh does the same job as csv2xmlByKeyword.sh 
however splits the CSV files into pieces smaller units thus providing file sizes more
managable for computers with limited memory capacity.
Each CSV content is prepended with the heading from the original single CSV. Each piece
is named  with the identifying keyword followed by a four digit numeric then the extension .csv








csvSplits2xmlByKeyword.sh
